-- A. Consider the following schema for a LibraryDatabase:
-- BOOK (Book_id, Title, Publisher_Name, Pub_Year)
-- BOOK_AUTHORS (Book_id, Author_Name)
-- PUBLISHER (Name, Address, Phone) 
-- BOOK_COPIES (Book_id, Branch_id, No-of_Copies)
-- BOOK_LENDING (Book_id, Branch_id, Card_No, Date_Out, Due_Date) 
-- LIBRARY_BRANCH (Branch_id, Branch_Name, Address)
-- Write SQL queries to
-- 1. Retrieve details of all books in the library – id, title, name of publisher, authors, number
-- of copies in each branch,etc.
-- 2. Get the particulars of borrowers who have borrowed more than 3 books, but from Jan
-- 2017 to Jun2017
-- 3. Delete a book in BOOK table. Update the contents of other tables to reflect this data
-- manipulationoperation.
-- 4. Partition the BOOK table based on year of publication. Demonstrate its working with a
-- simplequery.
-- 5. Create a view of all books and its number of copies that are currently available in the
-- Library.

CREATE TABLE PUBLISHER (
    NAME VARCHAR(20) PRIMARY KEY,
    PHONE INT,
    ADDRESS VARCHAR(50)
);

CREATE TABLE BOOK (
    BOOK_ID INT PRIMARY KEY,
    TITLE VARCHAR(50),
    PUB_YEAR VARCHAR(4),
    PUBLISHER_NAME VARCHAR(20),
    FOREIGN KEY (PUBLISHER_NAME) REFERENCES PUBLISHER(NAME) ON DELETE CASCADE
);

CREATE TABLE BOOK_AUTHORS (
    AUTHOR_NAME VARCHAR(50),
    BOOK_ID INT,
    PRIMARY KEY (BOOK_ID, AUTHOR_NAME),
    FOREIGN KEY (BOOK_ID) REFERENCES BOOK(BOOK_ID) ON DELETE CASCADE
);

CREATE TABLE LIBRARY_BRANCH (
    BRANCH_ID INT PRIMARY KEY,
    BRANCH_NAME VARCHAR(50),
    ADDRESS VARCHAR(50)
);

CREATE TABLE BOOK_COPIES (
    NO_OF_COPIES INT,
    BOOK_ID INT,
    BRANCH_ID INT,
    PRIMARY KEY (BOOK_ID, BRANCH_ID),
    FOREIGN KEY (BOOK_ID) REFERENCES BOOK(BOOK_ID) ON DELETE CASCADE,
    FOREIGN KEY (BRANCH_ID) REFERENCES LIBRARY_BRANCH(BRANCH_ID) ON DELETE CASCADE
);

CREATE TABLE CARD (
    CARD_NO INT PRIMARY KEY
);

CREATE TABLE BOOK_LENDING (
    DATE_OUT DATE,
    DUE_DATE DATE,
    BOOK_ID INT,
    BRANCH_ID INT,
    CARD_NO INT,
    PRIMARY KEY (BOOK_ID, BRANCH_ID, CARD_NO),
    FOREIGN KEY (BOOK_ID) REFERENCES BOOK(BOOK_ID) ON DELETE CASCADE,
    FOREIGN KEY (BRANCH_ID) REFERENCES LIBRARY_BRANCH(BRANCH_ID) ON DELETE CASCADE,
    FOREIGN KEY (CARD_NO) REFERENCES CARD(CARD_NO) ON DELETE CASCADE
);

INSERT INTO PUBLISHER VALUES ('MCGRAW-HILL', 9989076587, 'BANGALORE');
INSERT INTO PUBLISHER VALUES ('PEARSON', 9889076565, 'NEW DELHI');
INSERT INTO PUBLISHER VALUES ('RANDOM HOUSE', 7455679345, 'HYDERABAD');
INSERT INTO PUBLISHER VALUES ('HACHETTE LIVRE', 8970862340, 'CHENNAI');
INSERT INTO PUBLISHER VALUES ('GRUPO PLANETA', 7756120238, 'BANGALORE');

INSERT INTO BOOK VALUES (1, 'DBMS', '2017', 'MCGRAW-HILL');
INSERT INTO BOOK VALUES (2, 'ADBMS', '2016', 'MCGRAW-HILL');
INSERT INTO BOOK VALUES (3, 'CN', '2016', 'PEARSON');
INSERT INTO BOOK VALUES (4, 'CG', '2015', 'GRUPO PLANETA');
INSERT INTO BOOK VALUES (5, 'OS', '2016', 'PEARSON');

INSERT INTO BOOK_AUTHORS VALUES ('NAVATHE', 1);
INSERT INTO BOOK_AUTHORS VALUES ('NAVATHE', 2);
INSERT INTO BOOK_AUTHORS VALUES ('TANENBAUM', 3);
INSERT INTO BOOK_AUTHORS VALUES ('EDWARD ANGEL', 4);
INSERT INTO BOOK_AUTHORS VALUES ('GALVIN', 5);

INSERT INTO LIBRARY_BRANCH VALUES (10, 'RR NAGAR', 'BANGALORE');
INSERT INTO LIBRARY_BRANCH VALUES (11, 'RNSIT', 'BANGALORE');
INSERT INTO LIBRARY_BRANCH VALUES (12, 'RAJAJI NAGAR', 'BANGALORE');
INSERT INTO LIBRARY_BRANCH VALUES (13, 'NITTE', 'MANGALORE');
INSERT INTO LIBRARY_BRANCH VALUES (14, 'MANIPAL', 'UDUPI');

INSERT INTO BOOK_COPIES VALUES (10, 1, 10);
INSERT INTO BOOK_COPIES VALUES (5, 1, 11);
INSERT INTO BOOK_COPIES VALUES (2, 2, 12);
INSERT INTO BOOK_COPIES VALUES (5, 2, 13);
INSERT INTO BOOK_COPIES VALUES (7, 3, 14);
INSERT INTO BOOK_COPIES VALUES (1, 5, 10);
INSERT INTO BOOK_COPIES VALUES (3, 4, 11);

INSERT INTO CARD VALUES (100);
INSERT INTO CARD VALUES (101);
INSERT INTO CARD VALUES (102);
INSERT INTO CARD VALUES (103);
INSERT INTO CARD VALUES (104);

INSERT INTO BOOK_LENDING VALUES ('2017-01-01', '2017-06-01', 1, 10, 101);
INSERT INTO BOOK_LENDING VALUES ('2017-01-11', '2017-03-11', 3, 14, 101);
INSERT INTO BOOK_LENDING VALUES ('2017-02-21', '2017-04-21', 2, 13, 101);
INSERT INTO BOOK_LENDING VALUES ('2017-03-15', '2017-07-15', 4, 11, 101);
INSERT INTO BOOK_LENDING VALUES ('2017-04-12', '2017-05-12', 1, 11, 104);

-- 1. Retrieve details of all books in the library – id, title, name of publisher, authors, number
-- of copies in each branch,etc.
SELECT B.BOOK_ID, B.TITLE, B.PUBLISHER_NAME, A.AUTHOR_NAME, C.NO_OF_COPIES, L.BRANCH_ID
FROM BOOK B
JOIN BOOK_AUTHORS A ON B.BOOK_ID = A.BOOK_ID
JOIN BOOK_COPIES C ON B.BOOK_ID = C.BOOK_ID
JOIN LIBRARY_BRANCH L ON L.BRANCH_ID = C.BRANCH_ID;

-- 2. Get the particulars of borrowers who have borrowed more than 3 books, but from Jan
-- 2017 to Jun2017
SELECT CARD_NO
FROM BOOK_LENDING
WHERE DATE_OUT BETWEEN '2017-01-01' AND '2017-07-01'
GROUP BY CARD_NO
HAVING COUNT(*) > 3;

-- 3. Delete a book in BOOK table. Update the contents of other tables to reflect this data
-- manipulationoperation.
DELETE FROM BOOK WHERE BOOK_ID=3;

-- 4. Partition the BOOK table based on year of publication. Demonstrate its working with a
-- simplequery.
CREATE VIEW V_PUBLICATION AS 
SELECT BOOK_ID, TITLE, PUB_YEAR 
FROM BOOK;
SELECT * FROM V_PUBLICATION; --to see created view
SHOW CREATE VIEW V_PUBLICATION; --definition of view

-- 5. Create a view of all books and its number of copies that are currently available in the
-- Library.
CREATE VIEW V_BOOKS AS
SELECT B.BOOK_ID, B.TITLE, C.NO_OF_COPIES
FROM BOOK B
JOIN BOOK_COPIES C ON B.BOOK_ID = C.BOOK_ID;
SELECT * FROM V_BOOKS; --to see created view
SHOW CREATE VIEW V_BOOKS; --definition of view





